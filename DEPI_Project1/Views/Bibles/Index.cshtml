@model IEnumerable<Bible>

@{
    ViewData["Title"] = "Index";
}

<h1>Index</h1>

<p>
    <a asp-action="Create">Create New</a>
</p>



<form class="col-6" method="get">
    <div class="input-group mt-3">
        <!-- Search Input -->
        <input name="search" value="@ViewBag.SearchText" class="form-control" />

        <!-- Dropdown for search type -->
        <select name="searchType" class="form-select mx-2">
            @if (ViewBag.SearchType == "exact")
            {
                <option value="exact" selected>Exact Word</option>
            }
            else
            {
                <option value="exact">Exact Word</option>
            }

            @if (ViewBag.SearchType == "contain")
            {
                <option value="contain" selected>Contains</option>
            }
            else
            {
                <option value="contain">Contains</option>
            }

            @if (ViewBag.SearchType == "start")
            {
                <option value="start" selected>Starts With</option>
            }
            else
            {
                <option value="start">Starts With</option>
            }

            @if (ViewBag.SearchType == "end")
            {
                <option value="end" selected>Ends With</option>
            }
            else
            {
                <option value="end">Ends With</option>
            }
        </select>


        <button type="submit" class="btn btn-secondary">Search</button>
    </div>
</form>



<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Book)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Chapter)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Verse)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Language)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Edition)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Text)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Pronunciation)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Notes)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Book)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Chapter)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Verse)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Language)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Edition)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Text)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Pronunciation)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Notes)
            </td>
            <td>
                <a asp-action="Edit" asp-route-id="@item.BibleID">Edit</a> |
                <a asp-action="Details" asp-route-id="@item.BibleID">Details</a> |
                <a asp-action="Delete" asp-route-id="@item.BibleID">Delete</a>
            </td>
        </tr>
}
    </tbody>
</table>
