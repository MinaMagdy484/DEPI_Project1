@model object
@{
    ViewData["Title"] = "Select Existing Group as Child";
}

<h1>Select Existing Group as Child</h1>
<h4>Parent Group: @ViewBag.ParentGroupName</h4>
<hr />

<!-- Search Form -->
<div class="row mb-4">
    <div class="col-md-6">
        <form method="get">
            <input type="hidden" name="parentGroupID" value="@ViewBag.ParentGroupID" />
            <div class="input-group">
                <input type="text" name="search" class="form-control" placeholder="Search groups by name or words..." value="@ViewBag.SearchText">
                <button class="btn btn-outline-secondary" type="submit">
                    <i class="bi bi-search"></i> Search
                </button>
            </div>
        </form>
    </div>
</div>

<!-- Available Groups -->
@if (ViewBag.AvailableGroups != null && ((List<GroupWord>)ViewBag.AvailableGroups).Any())
{
    <div class="card">
        <div class="card-header">
            <h5>Available Groups (@((List<GroupWord>)ViewBag.AvailableGroups).Count)</h5>
        </div>
        <div class="card-body">
            <div class="table-responsive">
                <table class="table table-hover">
                    <thead>
                        <tr>
                            <th>Group Name</th>
                            <th>Origin Language</th>
                            <th>Etymology Word</th>
                            <th>Words Count</th>
                            <th>Matching Words</th>
                            <th>Action</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var availableGroup in (List<GroupWord>)ViewBag.AvailableGroups)
                        {
                            <tr>
                                <td>
                                    <strong>@availableGroup.Name</strong>
                                    @if (!string.IsNullOrEmpty(availableGroup.Notes))
                                    {
                                        <br><small class="text-muted">@availableGroup.Notes</small>
                                    }
                                </td>
                                <td>
                                    @if (!string.IsNullOrEmpty(availableGroup.OriginLanguage))
                                    {
                                        <span class="badge bg-secondary">@availableGroup.OriginLanguage</span>
                                    }
                                </td>
                                <td>@availableGroup.EtymologyWord</td>
                                <td>
                                    <span class="badge bg-info">@(availableGroup.Words?.Count ?? 0) words</span>
                                </td>
                                <td>
                                    @if (!string.IsNullOrEmpty(ViewBag.SearchText as string) && availableGroup.Words != null)
                                    {
                                        var searchText = ViewBag.SearchText.ToString().ToLowerInvariant();
                                        var matchingWords = availableGroup.Words
                                            .Where(w => w.Word_text.ToLowerInvariant().Contains(searchText))
                                            .Take(3)
                                            .ToList();
                                        
                                        if (matchingWords.Any())
                                        {
                                            <small class="text-success">
                                                @string.Join(", ", matchingWords.Select(w => w.Word_text))
                                                @if (availableGroup.Words.Count(w => w.Word_text.ToLowerInvariant().Contains(searchText)) > 3)
                                                {
                                                    <text>... (+@(availableGroup.Words.Count(w => w.Word_text.ToLowerInvariant().Contains(searchText)) - 3) more)</text>
                                                }
                                            </small>
                                        }
                                    }
                                </td>
                                                                <td>
                                    <form asp-action="AddExistingGroupAsChild" method="post" style="display:inline;">
                                        @Html.AntiForgeryToken()
                                        <input type="hidden" name="parentGroupID" value="@ViewBag.ParentGroupID" />
                                        <input type="hidden" name="childGroupID" value="@availableGroup.ID" />
                                        <div class="mb-2">
                                            <select name="isCompound" class="form-control" required>
                                                <option value="">Relation</option>
                                                <option value="true">Compound</option>
                                                <option value="false">Derived</option>
                                            </select>
                                        </div>
                                        <button type="submit" class="btn btn-success btn-sm"
                                                onclick="return confirm('Add @availableGroup.Name as child group?');">
                                            <i class="bi bi-plus-circle"></i> Add as Child
                                        </button>
                                    </form>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
}
else
{
    <div class="alert alert-info">
        <i class="bi bi-info-circle"></i> 
        @if (string.IsNullOrEmpty(ViewBag.SearchText as string))
        {
            <text>Please enter a search term to find groups.</text>
        }
        else
        {
            <text>No groups found matching your search criteria "@ViewBag.SearchText".</text>
        }
    </div>
}

<div class="mt-3">
    <a asp-action="Details" asp-route-id="@ViewBag.ParentGroupID" class="btn btn-secondary">
        <i class="bi bi-arrow-left"></i> Back to Group Details
    </a>
</div>