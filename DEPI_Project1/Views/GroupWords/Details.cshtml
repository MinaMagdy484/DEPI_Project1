@model GroupWord

@{
    ViewData["Title"] = "Details";
}

<h1>Details</h1>

<div>
    <h4>GroupWord</h4>
    <hr />
    <dl class="row">
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Name)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Name)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.OriginLanguage)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.OriginLanguage)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.EtymologyWord)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.EtymologyWord)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Etymology)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Etymology)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Notes)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Notes)
        </dd>

    </dl>
</div>


@if (Model != null)
{
    <dt class="col-sm-2">
        Group
    </dt>
    <dd class="col-sm-10">
        <strong>@Model.Name</strong>
        @if (!string.IsNullOrEmpty(Model.Etymology))
        {
            @(" (" + Model.Etymology + ")")
        }

        <h4>Group Explanations</h4>
        <ul>
            @foreach (var groupExplanation in Model.GroupExplanations)
            {
                <li>@groupExplanation.Explanation (@groupExplanation.Language)</li>
            }
        </ul>

        <div class="btn-group">

        <a asp-action="AddMeaningToGroup"
           asp-controller="GroupWords"
           asp-route-groupId="@Model.ID"
           asp-route-wordId=""
           class="btn btn-primary">
            Add Defintion to All Words in this Group
        </a>
            @* <a asp-action="AddMeaningToGroup" asp-route-groupId="@Model.ID" asp-route-wordId="" class="btn btn-primary">
                Add New Meaning
            </a> *@
            <a asp-action="AddExistingMeaningToGroup" asp-route-groupId="@Model.ID" asp-route-wordId="" class="btn btn-secondary">
                Add Existing Meaning
            </a>
        </div>
        <h4>Words in this Group</h4>

        <ul>
            @foreach (var groupWord in Model.Words.OrderBy(w => w.Language).ThenBy(w => w.Word_text))
            {
                @* <li>@groupWord.Word_text (@groupWord.Language, @groupWord.Class)</li>*@
                <h5> <a asp-controller="GroupWords" asp-action="Details" asp-route-id="@groupWord.WordId">@groupWord.Word_text (@groupWord.Language, @groupWord.Class) </a> </h5>

            }
        </ul>
    </dd>

    <h3 style="display:inline;">Parent Groups</h3>
    <a asp-action="CreateGroupAsParent" asp-controller="Words" asp-route-ChildGroupID="@Model.ID" asp-route-wordId="">Create Parent Group</a>
    int ii = 1;
    <ul>



        @foreach (var parentRelation in Model.GroupParents)
        {

            <h4 style="display:inline;"> <a asp-controller="GroupWords" asp-action="Details" asp-route-id="@parentRelation.ParentGroup.ID">(@ii) @parentRelation.ParentGroup.Name</a> </h4>
            <a asp-action="AddWordToGroup" asp-route-groupid="@parentRelation.ParentGroup.ID">Add Word to this Group</a>

            @*                     <li style="display:inline;">@parentRelation.ParentGroup.Name</li>
 *@                    <form asp-action="DeleteGroupRelation" method="post" style="display:inline;">
                @Html.AntiForgeryToken()
                <input type="hidden" name="id" value="@parentRelation.ID" />
                <input type="hidden" name="wordId" value="@Model.ID" />
                <button type="submit" class="btn btn-danger" onclick="return confirm('Are you sure you want to delete this Group Relation?');">
                    Delete Group Relation
                </button>
            </form>
            <br />
            ii++;
            int iii = 1;

            foreach (var wordsInPar in parentRelation.ParentGroup.Words)
            {
                <h5> <a asp-action="Details" asp-route-id="@wordsInPar.WordId"> @iii- @wordsInPar.Word_text </a> </h5>

            }
            iii = 1;
        }
    </ul>
    <br />
    ii = 1;

    <h3 style="display:inline;">Child Groups</h3>
    <a asp-action="CreateGroupAsChild" asp-controller="Words" asp-route-parentGroupID="@Model.ID" asp-route-wordId="">Create Child Group</a>

    <ul>
        @foreach (var childRelation in Model.GroupChilds)
        {

            <h4 style="display:inline;"> <a asp-controller="GroupWords" asp-action="Details" asp-route-id="@childRelation.RelatedGroup.ID">(@ii) @childRelation.RelatedGroup.Name</a> </h4>

            <a asp-action="AddWordToGroup" asp-route-groupid="@childRelation.RelatedGroup.ID">Add Word to this Group</a>

            <form asp-action="DeleteGroupRelation" method="post" style="display:inline;">
                @Html.AntiForgeryToken()
                <input type="hidden" name="id" value="@childRelation.ID" />
                <input type="hidden" name="wordId" value="@Model.ID" />
                <button type="submit" class="btn btn-danger" onclick="return confirm('Are you sure you want to delete this Group Relation?');">
                    Delete Group Relation
                </button>
            </form>
            <br />
            ii++;
            int iii = 1;
            foreach (var wordsInPar in childRelation.RelatedGroup.Words)
            {
                <h5> <a asp-action="Details" asp-route-id="@wordsInPar.WordId"> @iii @wordsInPar.Word_text </a> </h5>
                iii++;
            }
        }
    </ul>
}
<div>
    <a asp-action="Edit" asp-route-id="@Model?.ID">Edit</a> |
    <a asp-action="Index">Back to List</a>
</div>
